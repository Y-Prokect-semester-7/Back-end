name: CI/CD Pipeline

on:
  push:
    branches: [ "developing" ]
  pull_request:
    branches: [ "developing" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore dependencies
        run: |
          dotnet restore ./UserManagement/UserManagement.csproj
          dotnet restore ./TweetManagement/TweetManagement.csproj
          dotnet restore ./AnalyticsService/AnalyticsService.csproj
          dotnet restore ./APIGateway/APIGateway.csproj
          dotnet restore ./Backend.Tests/Backend.Tests.csproj

      - name: Build services
        run: |
          dotnet build ./UserManagement/UserManagement.csproj --no-restore
          dotnet build ./TweetManagement/TweetManagement.csproj --no-restore
          dotnet build ./AnalyticsService/AnalyticsService.csproj --no-restore
          dotnet build ./APIGateway/APIGateway.csproj --no-restore
          dotnet build ./Backend.Tests/Backend.Tests.csproj --no-restore

      - name: Run Tests
        run: dotnet test --no-build --verbosity normal

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p .sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Y-Prokect-semester-7_Back-end" /o:"y-prokect-semester-7" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Build & Push API Gateway Image
        run: |
          cd APIGateway
          docker build -t $DOCKER_USERNAME/apigateway:develop .
          docker push $DOCKER_USERNAME/apigateway:develop

      - name: Build & Push User Management Image
        run: |
          cd ../UserManagement
          docker build -t $DOCKER_USERNAME/usermanagement:develop .
          docker push $DOCKER_USERNAME/usermanagement:develop
